{"ast":null,"code":"var _jsxFileName = \"/home/muhammadatif/Documents/Project/React/Colorsfinal/colrs-final-app/src/PaletteMetaForm.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\n\nclass PaletteMetaForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClickOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.state = {\n      open: true,\n      newPaletteName: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    ValidatorForm.addValidationRule(\"isPaletteNameUnique\", value => this.props.palettes.every(({\n      paletteName\n    }) => paletteName.toLowerCase() !== value.toLowerCase()));\n  }\n\n  handleChange(evt) {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  }\n\n  render() {\n    const newPaletteName = this.state.newPaletteName;\n    return React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Choose A Palette Name \"), React.createElement(ValidatorForm, {\n      onSubmit: () => this.props.handleSubmit(newPaletteName),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Please Enter a Name for Palette. Make Sure It's Unique\"), React.createElement(TextValidator, {\n      label: \"Palette Name\",\n      value: newPaletteName,\n      name: \"newPaletteName\",\n      fullWidth: true,\n      margin: \"normal\",\n      onChange: this.handleChange,\n      validators: [\"required\", \"isPaletteNameUnique\"],\n      errorMessages: [\"Enter PaletteName\", \"Name Already Taken\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.props.hideForm,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Save Palette\"))));\n  }\n\n}\n\nexport default PaletteMetaForm;","map":{"version":3,"sources":["/home/muhammadatif/Documents/Project/React/Colorsfinal/colrs-final-app/src/PaletteMetaForm.js"],"names":["React","Component","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","ValidatorForm","TextValidator","PaletteMetaForm","constructor","props","handleClickOpen","setState","open","handleClose","state","newPaletteName","handleChange","bind","componentDidMount","addValidationRule","value","palettes","every","paletteName","toLowerCase","evt","target","name","render","handleSubmit","hideForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\n\n\n\nclass PaletteMetaForm extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            open: true,\n            newPaletteName: \"\"\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount() {\n        ValidatorForm.addValidationRule(\"isPaletteNameUnique\", value =>\n            this.props.palettes.every(\n                ({ paletteName }) => paletteName.toLowerCase()  !== value.toLowerCase()\n            )\n        );\n    }\n\n    handleChange(evt) {\n        this.setState({\n          [evt.target.name]: evt.target.value\n        });\n    }\n    handleClickOpen = () => {\n      this.setState({ open: true });\n    };\n  \n    handleClose = () => {\n        this.setState({ open: false });\n    };\n    \n    render() {\n        const { newPaletteName } = this.state; \n        return (\n                <Dialog \n                    open={this.state.open} \n                    onClose={this.handleClose} \n                    aria-labelledby=\"form-dialog-title\"\n                >\n                <DialogTitle id=\"form-dialog-title\">Choose A Palette Name </DialogTitle>\n                <ValidatorForm onSubmit={() => this.props.handleSubmit(newPaletteName)}\n                > \n                    <DialogContent>\n                    <DialogContentText>\n                    Please Enter a Name for Palette. Make Sure It's Unique\n                    </DialogContentText>\n                    <TextValidator \n                        label=\"Palette Name\"\n                        value={newPaletteName}\n                        name=\"newPaletteName\"\n                        fullWidth\n                        margin=\"normal\"\n                        onChange={this.handleChange}\n                        validators={[\"required\", \"isPaletteNameUnique\"]}\n                        errorMessages={[\"Enter PaletteName\", \"Name Already Taken\"]}    \n                    />\n                    \n                        \n                        \n                \n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.props.hideForm} color=\"primary\">\n                    Cancel\n                    </Button>\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                        Save Palette\n                    </Button>\n                </DialogActions> \n                </ValidatorForm>\n                </Dialog>\n    );\n  }\n}\n    \nexport default PaletteMetaForm;"]},"metadata":{},"sourceType":"module"}