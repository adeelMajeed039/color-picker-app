{"ast":null,"code":"import chroma from 'chroma-js';\nconst levels = [50, 100, 200, 300, 400, 500, 600, 700, 800, 900];\n\nfunction generatePalette(starterPalette) {\n  let newPalette = {\n    paletteName: starterPalette.paletteName,\n    id: starterPalette.id,\n    emoji: starterPalette.emoji,\n    colors: {}\n  };\n\n  for (let level of levels) {\n    newPalette.colors[level] = [];\n  }\n\n  for (let color of starterPalette.colors) {\n    let scale = getScale(color.colors, 10).reverse();\n\n    for (let i in scale) {\n      newPalette.colors[levels[i]].push({\n        name: \"{color.name} \".concat(levels[i]),\n        id: color.name.toLowerCase().replace(/ /g, \"-\"),\n        hex: scale[i],\n        rgb: chroma(scale[i]).css()\n      });\n    }\n  }\n\n  return newPalette;\n}\n\nfunction getRange(hexColor) {\n  const end = \"#fff\";\n  return [chroma(hexColor).darken(1.4).hex(), hexColor, end];\n}\n\nfunction getScale(hexColor, numberOfColors) {\n  return chroma.scale(getRange(hexColor)).mode(\"lab\").colors(numberOfColors);\n}\n\nexport { generatePalette };","map":{"version":3,"sources":["/home/muhammadatif/Documents/Project/React/Colorsfinal/colrs-final-app/src/colorHelpers.js"],"names":["chroma","levels","generatePalette","starterPalette","newPalette","paletteName","id","emoji","colors","level","color","scale","getScale","reverse","i","push","name","toLowerCase","replace","hex","rgb","css","getRange","hexColor","end","darken","numberOfColors","mode"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,WAAnB;AACA,MAAMC,MAAM,GAAG,CAAC,EAAD,EAAK,GAAL,EAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyB,GAAzB,EAA8B,GAA9B,EAAmC,GAAnC,EAAwC,GAAxC,EAA6C,GAA7C,CAAf;;AAEA,SAASC,eAAT,CAAyBC,cAAzB,EAAyC;AACrC,MAAIC,UAAU,GAAG;AACbC,IAAAA,WAAW,EAAEF,cAAc,CAACE,WADf;AAEbC,IAAAA,EAAE,EAAEH,cAAc,CAACG,EAFN;AAGbC,IAAAA,KAAK,EAAEJ,cAAc,CAACI,KAHT;AAIbC,IAAAA,MAAM,EAAE;AAJK,GAAjB;;AAMA,OAAK,IAAIC,KAAT,IAAkBR,MAAlB,EAA0B;AACtBG,IAAAA,UAAU,CAACI,MAAX,CAAkBC,KAAlB,IAA2B,EAA3B;AACH;;AACD,OAAK,IAAIC,KAAT,IAAkBP,cAAc,CAACK,MAAjC,EAAyC;AACrC,QAAIG,KAAK,GAAGC,QAAQ,CAACF,KAAK,CAACF,MAAP,EAAe,EAAf,CAAR,CAA2BK,OAA3B,EAAZ;;AACA,SAAK,IAAIC,CAAT,IAAcH,KAAd,EAAqB;AACjBP,MAAAA,UAAU,CAACI,MAAX,CAAkBP,MAAM,CAACa,CAAD,CAAxB,EAA6BC,IAA7B,CAAkC;AAC9BC,QAAAA,IAAI,yBAAkBf,MAAM,CAACa,CAAD,CAAxB,CAD0B;AAE9BR,QAAAA,EAAE,EAAEI,KAAK,CAACM,IAAN,CAAWC,WAAX,GAAyBC,OAAzB,CAAiC,IAAjC,EAAuC,GAAvC,CAF0B;AAG9BC,QAAAA,GAAG,EAAER,KAAK,CAACG,CAAD,CAHoB;AAI9BM,QAAAA,GAAG,EAAEpB,MAAM,CAACW,KAAK,CAACG,CAAD,CAAN,CAAN,CAAiBO,GAAjB;AAJyB,OAAlC;AAMH;AACJ;;AACD,SAAOjB,UAAP;AACH;;AAED,SAASkB,QAAT,CAAkBC,QAAlB,EAA4B;AACxB,QAAMC,GAAG,GAAG,MAAZ;AACA,SAAO,CACHxB,MAAM,CAACuB,QAAD,CAAN,CAAiBE,MAAjB,CAAwB,GAAxB,EAA6BN,GAA7B,EADG,EAEHI,QAFG,EAGHC,GAHG,CAAP;AAKH;;AAED,SAASZ,QAAT,CAAkBW,QAAlB,EAA4BG,cAA5B,EAA4C;AACxC,SAAO1B,MAAM,CACRW,KADE,CACIW,QAAQ,CAACC,QAAD,CADZ,EAEFI,IAFE,CAEG,KAFH,EAGFnB,MAHE,CAGKkB,cAHL,CAAP;AAIH;;AAED,SAASxB,eAAT","sourcesContent":["import chroma from 'chroma-js';\nconst levels = [50, 100, 200, 300, 400, 500, 600, 700, 800, 900];\n\nfunction generatePalette(starterPalette) {\n    let newPalette = {\n        paletteName: starterPalette.paletteName,\n        id: starterPalette.id,\n        emoji: starterPalette.emoji,\n        colors: {}\n    };\n    for (let level of levels) {\n        newPalette.colors[level] = [];\n    }\n    for (let color of starterPalette.colors) {\n        let scale = getScale(color.colors, 10).reverse();\n        for (let i in scale) {\n            newPalette.colors[levels[i]].push({\n                name: `{color.name} ${levels[i]}`,\n                id: color.name.toLowerCase().replace(/ /g, \"-\"),\n                hex: scale[i],\n                rgb: chroma(scale[i]).css()\n            });\n        }\n    }\n    return newPalette;\n}\n\nfunction getRange(hexColor) {\n    const end = \"#fff\";\n    return [\n        chroma(hexColor).darken(1.4).hex(),\n        hexColor,\n        end\n    ];\n}\n\nfunction getScale(hexColor, numberOfColors) {\n    return chroma\n        .scale(getRange(hexColor))\n        .mode(\"lab\")\n        .colors(numberOfColors);\n}\n\nexport { generatePalette };"]},"metadata":{},"sourceType":"module"}