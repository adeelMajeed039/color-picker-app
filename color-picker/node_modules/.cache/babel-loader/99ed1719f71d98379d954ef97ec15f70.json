{"ast":null,"code":"var _jsxFileName = \"/home/muhammadatif/Documents/Project/React/Colorsfinal/colrs-final-app/src/ColorBox.js\";\nimport React, { Component } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Link } from 'react-router-dom';\nimport chroma from 'chroma-js';\nimport { withStyles } from '@material-ui/styles';\nimport './ColorBox.css';\nconst styles = {\n  copyText: {\n    color: props => chroma(props.background).luminance() >= 0.7 ? \"black\" : \"white\"\n  },\n  colorName: {\n    color: props => chroma(props.background).luminance() <= 0.08 ? \"whit\" : \"black\"\n  }\n};\n\nclass ColorBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      copied: false\n    };\n    this.chageCopyState = this.chageCopyState.bind(this);\n  }\n\n  chageCopyState() {\n    this.setState({\n      copied: true\n    }, () => {\n      setTimeout(() => this.setState({\n        copied: false\n      }), 1000);\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          name = _this$props.name,\n          background = _this$props.background,\n          moreUrl = _this$props.moreUrl,\n          showLink = _this$props.showLink,\n          classes = _this$props.classes;\n    const copied = this.state.copied;\n    const isDarkColor = chroma(background).luminance() <= 0.08;\n    const isLightColor = chroma(background).luminance() >= 0.7;\n    return React.createElement(CopyToClipboard, {\n      text: background,\n      onCopy: this.chageCopyState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        background\n      },\n      className: \"ColorBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        background\n      },\n      className: \"copy-overlay \".concat(copied && \"show\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"copy-msg \".concat(copied && \"show\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Copied!\"), React.createElement(\"p\", {\n      className: classes.copyText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, background)), React.createElement(\"div\", {\n      className: \"copy-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"box-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: classes.colorName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, name)), React.createElement(\"button\", {\n      className: \"copy-button \".concat(isLightColor && \"dark-text\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Copy\")), showLink && React.createElement(Link, {\n      to: moreUrl,\n      onClick: e => e.stopPropagation(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"see-more \".concat(isLightColor && \"dark-text\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"More\"))));\n  }\n\n}\n\nexport default withStyles(styles)(ColorBox);","map":{"version":3,"sources":["/home/muhammadatif/Documents/Project/React/Colorsfinal/colrs-final-app/src/ColorBox.js"],"names":["React","Component","CopyToClipboard","Link","chroma","withStyles","styles","copyText","color","props","background","luminance","colorName","ColorBox","constructor","state","copied","chageCopyState","bind","setState","setTimeout","render","name","moreUrl","showLink","classes","isDarkColor","isLightColor","e","stopPropagation"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Link } from 'react-router-dom';\nimport  chroma from 'chroma-js';\nimport { withStyles } from '@material-ui/styles';\n\n\nimport './ColorBox.css';\n\nconst styles = {\n    copyText: {\n        color: props => \n            chroma(props.background).luminance() >=0.7 ? \"black\" : \"white\" \n    },\n    colorName: {\n        color: props => \n            chroma(props.background).luminance() <=0.08 ? \"whit\" : \"black\"\n    }\n}\n\n\nclass ColorBox extends Component {\n    constructor(props){\n        super(props);\n        this.state = { copied: false };\n        this.chageCopyState = this.chageCopyState.bind(this);\n    }\n    chageCopyState(){\n        this.setState({ copied: true }, () => {\n            setTimeout(() => this.setState({ copied: false }), 1000);\n        });\n    }\n\n    render () {\n        const { name, background, moreUrl, showLink, classes } = this.props;\n        const { copied } = this.state;\n        const isDarkColor = chroma(background).luminance() <= 0.08;\n        const isLightColor = chroma(background).luminance() >= 0.7;\n\n        return (\n            <CopyToClipboard text={background} onCopy={this.chageCopyState}>\n                <div style={{ background }} className=\"ColorBox\">\n                    <div \n                        style={{ background }} \n                        className={`copy-overlay ${copied && \"show\"}`} \n                    />\n                    <div className={`copy-msg ${copied && \"show\"}`}>\n                        <h1>Copied!</h1>\n                        <p className={classes.copyText}>{background}</p>\n                    </div>\n                    <div className=\"copy-container\">\n                        <div className=\"box-content\">\n                            <span className={classes.colorName}>{name}</span>\n                        </div>\n                        <button className={`copy-button ${isLightColor && \"dark-text\" }`} >Copy</button>\n                    </div>\n                    {showLink && (\n                        <Link to={moreUrl} onClick={e => e.stopPropagation()}>\n                            <span className={`see-more ${isLightColor && \"dark-text\" }`}>More</span>\n                        </Link>\n                    )}\n                </div>\n            </CopyToClipboard>\n        );\n    }\n}\n\nexport default withStyles(styles)(ColorBox);\n"]},"metadata":{},"sourceType":"module"}