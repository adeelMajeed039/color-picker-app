{"ast":null,"code":"var _jsxFileName = \"/home/muhammadatif/Documents/Project/React/Colorsfinal/colrs-final-app/src/PaletteFormNav.js\";\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Button from '@material-ui/core/Button';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nconst drawerWidth = 400;\n\nconst styles = theme => ({\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: \"calc(100% - \".concat(drawerWidth, \"px)\"),\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20\n  }\n});\n\nclass PaletteFormNav extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newPaletteName: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    ValidatorForm.addValidationRule(\"isPaletteNameUnique\", value => this.props.palettes.every(({\n      paletteName\n    }) => paletteName.toLowerCase() !== value.toLowerCase()));\n  }\n\n  handleChange(evt) {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          open = _this$props.open;\n    const newPaletteName = this.state.newPaletteName;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(AppBar, {\n      position: \"fixed\",\n      color: \"default\",\n      className: classNames(classes.appBar, {\n        [classes.appBarShift]: open\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      disableGutters: !open,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      color: \"inherit\",\n      \"aria-label\": \"open drawer\",\n      onClick: this.props.handleDrawerOpen,\n      edge: \"start\",\n      className: classNames(classes.menuButton, open && classes.hide),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(MenuIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      variant: \"h6\",\n      noWrap: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Create Your alerre\"), React.createElement(\"div\", {\n      lassName: classes.navBtns,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(ValidatorForm, {\n      onSubmit: () => this.props.handleSubmit(newPaletteName),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(TextValidator, {\n      label: \"Palette Name\",\n      value: this.state.newPaletteName,\n      name: \"newPaletteName\",\n      onChange: this.handleChange,\n      validators: [\"required\", \"isPaletteNameUnique\"],\n      errorMessages: [\"Enter PaletteName\", \"Name Already Taken\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Save Palette\")), React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Go Back\"))))));\n  }\n\n}\n\nexport default withStyles(styles, {\n  withTheme: true\n})(PaletteFormNav);","map":{"version":3,"sources":["/home/muhammadatif/Documents/Project/React/Colorsfinal/colrs-final-app/src/PaletteFormNav.js"],"names":["React","Component","withStyles","Link","classNames","CssBaseline","AppBar","Toolbar","Typography","IconButton","MenuIcon","Button","ValidatorForm","TextValidator","drawerWidth","styles","theme","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","PaletteFormNav","constructor","props","state","newPaletteName","handleChange","bind","componentDidMount","addValidationRule","value","palettes","every","paletteName","toLowerCase","evt","setState","target","name","render","classes","open","handleDrawerOpen","hide","navBtns","handleSubmit","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Button from '@material-ui/core/Button';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\n\nconst drawerWidth = 400;\n\nconst styles = theme =>( {\n    appBar: {\n        transition: theme.transitions.create([\"margin\", \"width\"], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        })\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n          easing: theme.transitions.easing.easeOut,\n          duration: theme.transitions.duration.enteringScreen\n        })\n    },\n    menuButton: {\n        marginLeft: 12,\n        marginRight: 20\n    }\n});\n\nclass PaletteFormNav extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            newPaletteName: \"\"\n        }\n        this.handleChange = this.handleChange.bind(this);\n    }\n    componentDidMount() {\n        ValidatorForm.addValidationRule(\"isPaletteNameUnique\", value =>\n            this.props.palettes.every(\n                ({ paletteName }) => paletteName.toLowerCase()  !== value.toLowerCase()\n            )\n        );\n    }\n    handleChange(evt) {\n        this.setState({\n          [evt.target.name]: evt.target.value\n        });\n    }\n  \n    render() {\n        const { classes, open } = this.props;\n        const { newPaletteName } = this.state; \n        return(\n            <div>\n                <CssBaseline />\n                <AppBar\n                    position=\"fixed\"\n                    color=\"default\"\n                    className={classNames(classes.appBar, {\n                    [classes.appBarShift]: open,\n                    })}\n                >\n                    <Toolbar disableGutters={!open}>\n                        <IconButton\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                            onClick={this.props.handleDrawerOpen}\n                            edge=\"start\"\n                            className={classNames(classes.menuButton, open && classes.hide)}\n                        >\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" noWrap>\n                            Create Your alerre\n                        </Typography>\n                        <div lassName={classes.navBtns}>\n                            <ValidatorForm \n                                onSubmit={() => this.props.handleSubmit(newPaletteName)}\n                            >\n                            <TextValidator \n                                label=\"Palette Name\"\n                                value={this.state.newPaletteName}\n                                name=\"newPaletteName\"\n                                onChange={this.handleChange}\n                                validators={[\"required\", \"isPaletteNameUnique\"]}\n                                errorMessages={[\"Enter PaletteName\", \"Name Already Taken\"]}\n                            />\n                            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                                Save Palette\n                            </Button>\n                            </ValidatorForm>\n                            <Link to='/'>\n                                <Button variant='contained' color='secondary'>\n                                Go Back\n                                </Button>                  \n                            </Link>\n                        </div>\n                    </Toolbar>\n                </AppBar>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(PaletteFormNav);"]},"metadata":{},"sourceType":"module"}