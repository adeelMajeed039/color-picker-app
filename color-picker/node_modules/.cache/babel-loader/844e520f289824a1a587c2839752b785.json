{"ast":null,"code":"var _jsxFileName = \"/home/muhammadatif/Documents/Project/React/Colorsfinal/colrs-final-app/src/SingleColorPalette.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport PaletteFooter from './PaletteFooter';\nimport ColorBox from './ColorBox';\nimport { withStyles } from '@material-ui/styles';\n\nclass SingleColorPalette extends Component {\n  constructor(props) {\n    super(props);\n    this._shades = this.gatherShades(this.props.palette, this.props.colorId);\n    this.state = {\n      format: \"hex\"\n    };\n    this.changeFormat = this.changeFormat.bind(this);\n  }\n\n  gatherShades(palette, colorToFilterBy) {\n    let shades = [];\n    let allColors = palette.colors;\n\n    for (let key in allColors) {\n      shades = shades.concat(allColors[key].filter(color => color.id === colorToFilterBy));\n    }\n\n    return shades.slice(1);\n  }\n\n  changeFormat(val) {\n    this.setState({\n      format: val\n    });\n  }\n\n  render() {\n    const format = this.state.format;\n    const classes = this.props.classes;\n    const _this$props$palette = this.props.palette,\n          paletteName = _this$props$palette.paletteName,\n          emoji = _this$props$palette.emoji,\n          id = _this$props$palette.id;\n\n    const colorBoxes = this._shades.map(color => React.createElement(ColorBox, {\n      key: color.name,\n      name: color.name,\n      background: color[format],\n      showingFullPalette: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }));\n\n    return React.createElement(\"div\", {\n      className: classes.Palette,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      handleChange: this.changeFormat,\n      showingAllColors: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.colors,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, colorBoxes, React.createElement(\"div\", {\n      className: classes.goBack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/palette/\".concat(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Go Back\"))), React.createElement(PaletteFooter, {\n      paletteName: paletteName,\n      emoji: emoji,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withStyles(styles)(SingleColorPalette);","map":{"version":3,"sources":["/home/muhammadatif/Documents/Project/React/Colorsfinal/colrs-final-app/src/SingleColorPalette.js"],"names":["React","Component","Link","Navbar","PaletteFooter","ColorBox","withStyles","SingleColorPalette","constructor","props","_shades","gatherShades","palette","colorId","state","format","changeFormat","bind","colorToFilterBy","shades","allColors","colors","key","concat","filter","color","id","slice","val","setState","render","classes","paletteName","emoji","colorBoxes","map","name","Palette","goBack","styles"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,SAASC,UAAT,QAA2B,qBAA3B;;AAIA,MAAMC,kBAAN,SAAiCN,SAAjC,CAA2C;AACvCO,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,OAAL,GAAe,KAAKC,YAAL,CAAkB,KAAKF,KAAL,CAAWG,OAA7B,EAAsC,KAAKH,KAAL,CAAWI,OAAjD,CAAf;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAb;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDN,EAAAA,YAAY,CAACC,OAAD,EAAUM,eAAV,EAA0B;AAClC,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIC,SAAS,GAAGR,OAAO,CAACS,MAAxB;;AAEA,SAAK,IAAIC,GAAT,IAAgBF,SAAhB,EAA2B;AACvBD,MAAAA,MAAM,GAAGA,MAAM,CAACI,MAAP,CACLH,SAAS,CAACE,GAAD,CAAT,CAAeE,MAAf,CAAsBC,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAaR,eAA5C,CADK,CAAT;AAGH;;AACD,WAAOC,MAAM,CAACQ,KAAP,CAAa,CAAb,CAAP;AACH;;AACDX,EAAAA,YAAY,CAACY,GAAD,EAAK;AACb,SAAKC,QAAL,CAAc;AAAEd,MAAAA,MAAM,EAAEa;AAAV,KAAd;AACH;;AACDE,EAAAA,MAAM,GAAG;AAAA,UACGf,MADH,GACc,KAAKD,KADnB,CACGC,MADH;AAAA,UAEGgB,OAFH,GAEc,KAAKtB,KAFnB,CAEGsB,OAFH;AAAA,gCAG8B,KAAKtB,KAAL,CAAWG,OAHzC;AAAA,UAGGoB,WAHH,uBAGGA,WAHH;AAAA,UAGgBC,KAHhB,uBAGgBA,KAHhB;AAAA,UAGuBP,EAHvB,uBAGuBA,EAHvB;;AAIL,UAAMQ,UAAU,GAAG,KAAKxB,OAAL,CAAayB,GAAb,CAAiBV,KAAK,IACrC,oBAAC,QAAD;AACI,MAAA,GAAG,EAAEA,KAAK,CAACW,IADf;AAEI,MAAA,IAAI,EAAEX,KAAK,CAACW,IAFhB;AAGI,MAAA,UAAU,EAAEX,KAAK,CAACV,MAAD,CAHrB;AAII,MAAA,kBAAkB,EAAE,KAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADe,CAAnB;;AAQA,WACI;AAAK,MAAA,SAAS,EAAEgB,OAAO,CAACM,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,YAAY,EAAE,KAAKrB,YAA3B;AAAyC,MAAA,gBAAgB,EAAE,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,SAAS,EAAEe,OAAO,CAACV,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKa,UADL,EAEI;AAAK,MAAA,SAAS,EAAEH,OAAO,CAACO,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,EAAE,qBAAcZ,EAAd,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CAFJ,CAFJ,EAQI,oBAAC,aAAD;AAAe,MAAA,WAAW,EAAEM,WAA5B;AAAyC,MAAA,KAAK,EAAEC,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CADJ;AAYH;;AA9CsC;;AAiD3C,eAAe3B,UAAU,CAACiC,MAAD,CAAV,CAAmBhC,kBAAnB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport PaletteFooter from './PaletteFooter';\nimport ColorBox from './ColorBox' ;\n\nimport { withStyles } from '@material-ui/styles';\n\n\n\nclass SingleColorPalette extends Component {\n    constructor(props){\n        super(props);\n        this._shades = this.gatherShades(this.props.palette, this.props.colorId);\n        this.state = { format: \"hex\" };\n        this.changeFormat = this.changeFormat.bind(this);\n    }\n\n    gatherShades(palette, colorToFilterBy){\n        let shades = [];\n        let allColors = palette.colors;  \n \n        for (let key in allColors) {\n            shades = shades.concat(\n                allColors[key].filter(color => color.id === colorToFilterBy)\n            );\n        }\n        return shades.slice(1);\n    }\n    changeFormat(val){\n        this.setState({ format: val });\n    }\n    render() {\n        const { format } = this.state;\n        const { classes } =this.props;\n        const { paletteName, emoji, id } = this.props.palette;\n        const colorBoxes = this._shades.map(color => (\n            <ColorBox \n                key={color.name} \n                name={color.name} \n                background={color[format]} \n                showingFullPalette={false}\n            />\n        ))\n        return (\n            <div className={classes.Palette}>\n                <Navbar handleChange={this.changeFormat} showingAllColors={false}/>\n                <div className={classes.colors}>\n                    {colorBoxes}\n                    <div className={classes.goBack} >\n                        <Link to={`/palette/${id}`}>Go Back</Link>\n                    </div>\n                </div>\n                <PaletteFooter paletteName={paletteName} emoji={emoji}/>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SingleColorPalette);"]},"metadata":{},"sourceType":"module"}