{"ast":null,"code":"var _jsxFileName = \"/home/muhammadatif/Documents/Project/React/Colorsfinal/colrs-final-app/src/App.js\";\nimport React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Palette from './Palette';\nimport PaletteList from './PaletteList';\nimport SingleColorPalette from './SingleColorPalette';\nimport seedColors from './seedColors';\nimport { generatePalette } from './colorHelpers';\nimport NewPaletteForm from './NewPaletteForm';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    const savedPalettes = JSON.parse(window.localStorage.getItem(\"palettes\"));\n    this.state = {\n      palettes: savedPalettes || seedColors\n    };\n    this.savePalette = this.savePalette.bind(this);\n    this.findPalette = this.findPalette.bind(this);\n    this.deletePalette = this.deletePalette.bind(this);\n  }\n\n  findPalette(id) {\n    return this.state.palettes.find(function (palette) {\n      return palette.id === id;\n    });\n  }\n\n  deletePalette(id) {\n    this.setState(st => ({\n      palettes: st.palettes.filter(palette => palette.id !== id)\n    }), this.syncLocalStorage);\n  }\n\n  savePalette(newPalette) {\n    this.setState({\n      palettes: [...this.state.palettes, newPalette]\n    }, this.syncLocalStorage);\n  }\n\n  syncLocalStorage() {\n    window.localStorage.setItem(\"palettes\", JSON.stringify(this.state.palettes));\n  }\n\n  render() {\n    return React.createElement(Route, {\n      render: ({\n        location\n      }) => React.createElement(TransitionGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(CSSTransition, {\n        key: location.key,\n        classNames: \"fade\",\n        timeout: 500,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        location: location,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/palette/new\",\n        render: routeProps => React.createElement(Page, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(NewPaletteForm, Object.assign({\n          savePalette: this.savePalette,\n          palettes: this.state.palettes\n        }, routeProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/palette/:paletteId/:colorId\",\n        render: routeProps => React.createElement(Page, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(SingleColorPalette, {\n          colorId: routeProps.match.params.colorId,\n          palette: generatePalette(this.findPalette(routeProps.match.params.paletteId)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: routeProps => React.createElement(Page, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(PaletteList, Object.assign({\n          palettes: this.state.palettes,\n          deletePalette: this.deletePalette\n        }, routeProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/palette/:id\",\n        render: routeProps => React.createElement(Page, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(Palette, {\n          palette: generatePalette(this.findPalette(routeProps.match.params.id)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/muhammadatif/Documents/Project/React/Colorsfinal/colrs-final-app/src/App.js"],"names":["React","Component","Route","Switch","Palette","PaletteList","SingleColorPalette","seedColors","generatePalette","NewPaletteForm","TransitionGroup","CSSTransition","App","constructor","props","savedPalettes","JSON","parse","window","localStorage","getItem","state","palettes","savePalette","bind","findPalette","deletePalette","id","find","palette","setState","st","filter","syncLocalStorage","newPalette","setItem","stringify","render","location","key","routeProps","match","params","colorId","paletteId"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Palette from './Palette';\nimport PaletteList from './PaletteList';\nimport SingleColorPalette from './SingleColorPalette';\nimport seedColors from './seedColors';\nimport { generatePalette } from './colorHelpers';\nimport NewPaletteForm from './NewPaletteForm';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport './App.css';\nclass App extends Component {\n  constructor(props){\n    super(props);\n    const savedPalettes = JSON.parse(window.localStorage.getItem(\"palettes\"));\n    this.state = { palettes: savedPalettes || seedColors };\n    this.savePalette = this.savePalette.bind(this);\n    this.findPalette = this.findPalette.bind(this);\n    this.deletePalette = this.deletePalette.bind(this);\n  }\n  findPalette(id){\n    return this.state.palettes.find(function (palette) {\n      return palette.id === id;\n    });\n  }\n  deletePalette(id){\n    this.setState(\n      st => ({palettes: st.palettes.filter(palette => palette.id !== id)}),\n      this.syncLocalStorage\n    );\n  }\n  savePalette(newPalette) {\n    this.setState({ palettes: [...this.state.palettes, newPalette ]},\n      this.syncLocalStorage\n    );\n\n  }\n  syncLocalStorage() {\n    window.localStorage.setItem(\n      \"palettes\",\n      JSON.stringify(this.state.palettes)\n    );\n  }\n\n  render() {\n    return (\n      <Route render={({ location }) => (\n        <TransitionGroup>\n          <CSSTransition key={location.key} classNames='fade' timeout={500}>\n            <Switch location={location}>\n              <Route \n                exact \n                path=\"/palette/new\" \n                render={routeProps => (\n                  <Page> \n                    <NewPaletteForm \n                      savePalette={this.savePalette} \n                      palettes={this.state.palettes}\n                      {...routeProps} \n                    />\n                  </Page>\n                  )}\n                />\n              <Route \n                exact\n                path=\"/palette/:paletteId/:colorId\" \n                render={routeProps => (\n                  <Page>\n                    <SingleColorPalette\n                      colorId={routeProps.match.params.colorId}\n                      palette={generatePalette(\n                        this.findPalette(routeProps.match.params.paletteId)\n                      )}\n                    />\n                  </Page>\n                )}\n              />\n              <Route \n                exact path=\"/\" \n                render={routeProps => (\n                  <Page>\n                    <PaletteList \n                      palettes={this.state.palettes} \n                      deletePalette={this.deletePalette}\n                      {...routeProps}\n                    />\n                  </Page>\n                )} \n              />\n              <Route \n                exact\n                path=\"/palette/:id\"\n                render={routeProps => (\n                  <Page>\n                    <Palette\n                      palette={generatePalette(\n                        this.findPalette(routeProps.match.params.id)\n                      )}\n                    />\n                  </Page>\n                )}\n              />\n            </Switch>\n          </CSSTransition>\n        </TransitionGroup>\n      )}/>\n    );\n  }\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}