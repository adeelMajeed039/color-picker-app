{"ast":null,"code":"var _jsxFileName = \"/home/muhammadatif/Documents/Project/React/Colorsfinal/colrs-final-app/src/Navbar.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { withStyles } from '@material-ui/styles';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css'; // import './Navbar.css';\n\nconst styles = {\n  Navbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    height: \"6vh\"\n  },\n  logo: {\n    marginRight: \"15px\",\n    padding: \"0 13px\",\n    fontSize: \"22px\",\n    backgroundColor: \"#eceff1\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    \"& a\": {\n      color: \"black\",\n      textDecoration: \"none\"\n    }\n  },\n  slider: {\n    width: \"340px\",\n    margin: \"0 10px\",\n    display: \"inline-block\"\n  }\n};\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      format: \"hex\",\n      open: false\n    };\n    this.handleFormatChange = this.handleFormatChange.bind(this);\n    this.closeSnackbar = this.closeSnackbar.bind(this);\n  }\n\n  handleFormatChange(e) {\n    this.setState({\n      format: e.target.value,\n      open: true\n    });\n    this.props.handleChange(e.target.value);\n  }\n\n  closeSnackbar() {\n    this.setState({\n      open: false\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          level = _this$props.level,\n          changeLevel = _this$props.changeLevel,\n          showingAllColors = _this$props.showingAllColors,\n          classes = _this$props.classes;\n    const format = this.state.format;\n    return React.createElement(\"header\", {\n      className: classes.Navbar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.logo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"React ColorPicker\")), showingAllColors && React.createElement(\"div\", {\n      className: \"slider-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Leve: \", level), React.createElement(\"div\", {\n      className: classes.slider,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Slider, {\n      defaultValue: level,\n      min: 100,\n      max: 900,\n      step: 100,\n      onAfterChange: changeLevel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"select-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Select, {\n      value: format,\n      onChange: this.handleFormatChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: \"hex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Hex - #ffffff\"), React.createElement(MenuItem, {\n      value: \"rgb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"RGB - rgb(255, 255, 255)\"), React.createElement(MenuItem, {\n      value: \"rgba\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"RGBA - (255, 255, 255, 1.0)\"))), React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n      },\n      open: this.state.open,\n      autoHideDuration: 3000,\n      message: React.createElement(\"span\", {\n        id: \"message-id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Format Changed to \", format.toUpperCase()),\n      ContentProps: {\n        \"aria-describeddby\": \"message-id\"\n      },\n      onClose: this.closeSnackbar,\n      action: [React.createElement(IconButton, {\n        onClick: this.closeSnackbar,\n        color: \"inherit\",\n        key: \"close\",\n        \"aria-label\": \"close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(CloseIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }))],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withStyles(styles)(Navbar);","map":{"version":3,"sources":["/home/muhammadatif/Documents/Project/React/Colorsfinal/colrs-final-app/src/Navbar.js"],"names":["React","Component","Link","Select","MenuItem","Snackbar","IconButton","CloseIcon","withStyles","Slider","styles","Navbar","display","alignItems","justifyContent","height","logo","marginRight","padding","fontSize","backgroundColor","color","textDecoration","slider","width","margin","constructor","props","state","format","open","handleFormatChange","bind","closeSnackbar","e","setState","target","value","handleChange","render","level","changeLevel","showingAllColors","classes","vertical","horizontal","toUpperCase"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AAGA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAO,4BAAP,C,CACA;;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,UAAU,EAAE,QAFR;AAGJC,IAAAA,cAAc,EAAE,YAHZ;AAIJC,IAAAA,MAAM,EAAE;AAJJ,GADG;AAOXC,EAAAA,IAAI,EAAE;AACFC,IAAAA,WAAW,EAAE,MADX;AAEFC,IAAAA,OAAO,EAAE,QAFP;AAGFC,IAAAA,QAAQ,EAAE,MAHR;AAIFC,IAAAA,eAAe,EAAE,SAJf;AAKFL,IAAAA,MAAM,EAAE,MALN;AAMFH,IAAAA,OAAO,EAAE,MANP;AAOFC,IAAAA,UAAU,EAAE,QAPV;AAQF,WAAO;AACHQ,MAAAA,KAAK,EAAE,OADJ;AAEHC,MAAAA,cAAc,EAAE;AAFb;AARL,GAPK;AAoBXC,EAAAA,MAAM,EAAE;AACJC,IAAAA,KAAK,EAAE,OADH;AAEJC,IAAAA,MAAM,EAAE,QAFJ;AAGJb,IAAAA,OAAO,EAAE;AAHL;AApBG,CAAf;;AA2BA,MAAMD,MAAN,SAAqBV,SAArB,CAA+B;AAC3ByB,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,MAAM,EAAE,KAAV;AAAiBC,MAAAA,IAAI,EAAE;AAAvB,KAAb;AACA,SAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AACH;;AAEDD,EAAAA,kBAAkB,CAACG,CAAD,EAAG;AACjB,SAAKC,QAAL,CAAc;AAAEN,MAAAA,MAAM,EAAEK,CAAC,CAACE,MAAF,CAASC,KAAnB;AAA0BP,MAAAA,IAAI,EAAE;AAAhC,KAAd;AACA,SAAKH,KAAL,CAAWW,YAAX,CAAwBJ,CAAC,CAACE,MAAF,CAASC,KAAjC;AACH;;AAEDJ,EAAAA,aAAa,GAAE;AACX,SAAKE,QAAL,CAAc;AAAEL,MAAAA,IAAI,EAAE;AAAR,KAAd;AACH;;AAEDS,EAAAA,MAAM,GAAI;AAAA,wBACoD,KAAKZ,KADzD;AAAA,UACEa,KADF,eACEA,KADF;AAAA,UACSC,WADT,eACSA,WADT;AAAA,UACsBC,gBADtB,eACsBA,gBADtB;AAAA,UACwCC,OADxC,eACwCA,OADxC;AAAA,UAEEd,MAFF,GAEa,KAAKD,KAFlB,CAEEC,MAFF;AAGN,WACI;AAAQ,MAAA,SAAS,EAAEc,OAAO,CAAChC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAEgC,OAAO,CAAC3B,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,CADJ,EAMK0B,gBAAgB,IACb;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAaF,KAAb,CADJ,EAEI;AAAK,MAAA,SAAS,EAAEG,OAAO,CAACpB,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AACI,MAAA,YAAY,EAAEiB,KADlB;AAEI,MAAA,GAAG,EAAE,GAFT;AAGI,MAAA,GAAG,EAAE,GAHT;AAII,MAAA,IAAI,EAAE,GAJV;AAKI,MAAA,aAAa,EAAEC,WALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,CAPR,EAoBI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAEZ,MAAf;AAAuB,MAAA,QAAQ,EAAE,KAAKE,kBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFJ,EAGI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAHJ,CADJ,CApBJ,EA4BI,oBAAC,QAAD;AACI,MAAA,YAAY,EAAE;AAAEa,QAAAA,QAAQ,EAAE,QAAZ;AAAsBC,QAAAA,UAAU,EAAE;AAAlC,OADlB;AAEI,MAAA,IAAI,EAAE,KAAKjB,KAAL,CAAWE,IAFrB;AAGI,MAAA,gBAAgB,EAAE,IAHtB;AAII,MAAA,OAAO,EAAE;AAAM,QAAA,EAAE,EAAC,YAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAyCD,MAAM,CAACiB,WAAP,EAAzC,CAJb;AAKI,MAAA,YAAY,EAAE;AACV,6BAAqB;AADX,OALlB;AAQI,MAAA,OAAO,EAAE,KAAKb,aARlB;AASI,MAAA,MAAM,EAAE,CACJ,oBAAC,UAAD;AACI,QAAA,OAAO,EAAE,KAAKA,aADlB;AAEI,QAAA,KAAK,EAAC,SAFV;AAGI,QAAA,GAAG,EAAC,OAHR;AAII,sBAAW,OAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,CADI,CATZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5BJ,CADJ;AAmDH;;AAvE0B;;AA0E/B,eAAezB,UAAU,CAACE,MAAD,CAAV,CAAmBC,MAAnB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { withStyles } from '@material-ui/styles';\n\n\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\n// import './Navbar.css';\n\nconst styles = {\n    Navbar: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n        height: \"6vh\"\n    },\n    logo: {\n        marginRight: \"15px\",\n        padding: \"0 13px\",\n        fontSize: \"22px\",\n        backgroundColor: \"#eceff1\",\n        height: \"100%\",\n        display: \"flex\",\n        alignItems: \"center\",\n        \"& a\": {\n            color: \"black\",\n            textDecoration: \"none\",\n        }\n    },\n    slider: {\n        width: \"340px\",\n        margin: \"0 10px\",\n        display: \"inline-block\"\n    }\n}\n\nclass Navbar extends Component {\n    constructor(props){\n        super(props);\n        this.state = { format: \"hex\", open: false }; \n        this.handleFormatChange = this.handleFormatChange.bind(this);\n        this.closeSnackbar = this.closeSnackbar.bind(this);\n    }\n\n    handleFormatChange(e){\n        this.setState({ format: e.target.value, open: true });\n        this.props.handleChange(e.target.value);\n    }\n\n    closeSnackbar(){\n        this.setState({ open: false});\n    }\n\n    render () {\n        const { level, changeLevel, showingAllColors, classes } = this.props;\n        const { format } = this.state;\n        return (\n            <header className={classes.Navbar}>\n                <div className={classes.logo}>\n                    <Link to='/'>\n                        React ColorPicker\n                    </Link>\n                </div>\n                {showingAllColors && (\n                    <div className=\"slider-container\">\n                        <span>Leve: {level}</span>\n                        <div className={classes.slider}>\n                            <Slider \n                                defaultValue={level} \n                                min={100} \n                                max={900}\n                                step={100} \n                                onAfterChange={changeLevel} \n                            />\n                        </div>\n                    </div>\n                )}\n                <div className='select-container'>\n                    <Select value={format} onChange={this.handleFormatChange}>\n                        <MenuItem value=\"hex\">Hex - #ffffff</MenuItem>\n                        <MenuItem value=\"rgb\">RGB - rgb(255, 255, 255)</MenuItem>\n                        <MenuItem value=\"rgba\">RGBA - (255, 255, 255, 1.0)</MenuItem>\n\n                    </Select>\n                </div>\n                <Snackbar \n                    anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }} \n                    open={this.state.open}\n                    autoHideDuration={3000}\n                    message={<span id=\"message-id\">Format Changed to {format.toUpperCase()}</span>}\n                    ContentProps={{\n                        \"aria-describeddby\": \"message-id\"\n                    }}\n                    onClose={this.closeSnackbar}\n                    action={[\n                        <IconButton \n                            onClick={this.closeSnackbar} \n                            color=\"inherit\"\n                            key=\"close\"\n                            aria-label=\"close\"\n                        >\n                            <CloseIcon/>\n                        </IconButton>\n                    ]}\n                />\n            </header>\n        );\n    }\n}\n\nexport default withStyles(styles)(Navbar);\n"]},"metadata":{},"sourceType":"module"}