{"ast":null,"code":"var _jsxFileName = \"/home/muhammadatif/Documents/Project/React/Colorsfinal/colrs-final-app/src/PaletteMetaForm.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\n\nclass PaletteMetaForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClickOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.state = {\n      open: false\n    };\n  }\n\n  componentDidMount() {\n    ValidatorForm.addValidationRule(\"isPaletteNameUnique\", value => this.props.palettes.every(({\n      paletteName\n    }) => paletteName.toLowerCase() !== value.toLowerCase()));\n  }\n\n  handleChange(evt) {\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: this.handleClickOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Open form dialog\"), React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Subscribe\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"To subscribe to this website, please enter your email address here. We will send updates occasionally.\"), React.createElement(ValidatorForm, {\n      onSubmit: () => this.props.handleSubmit(newPaletteName),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(TextValidator, {\n      label: \"Palette Name\",\n      value: this.state.newPaletteName,\n      name: \"newPaletteName\",\n      onChange: this.handleChange,\n      validators: [\"required\", \"isPaletteNameUnique\"],\n      errorMessages: [\"Enter PaletteName\", \"Name Already Taken\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Save Palette\"))), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: this.handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Subscribe\"))));\n  }\n\n}\n\nexport default PaletteMetaForm;","map":{"version":3,"sources":["/home/muhammadatif/Documents/Project/React/Colorsfinal/colrs-final-app/src/PaletteMetaForm.js"],"names":["React","Component","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","ValidatorForm","TextValidator","PaletteMetaForm","constructor","props","handleClickOpen","setState","open","handleClose","state","componentDidMount","addValidationRule","value","palettes","every","paletteName","toLowerCase","handleChange","evt","target","name","render","handleSubmit","newPaletteName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\n\n\n\nclass PaletteMetaForm extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            open: false\n        };\n    }\n\n    componentDidMount() {\n        ValidatorForm.addValidationRule(\"isPaletteNameUnique\", value =>\n            this.props.palettes.every(\n                ({ paletteName }) => paletteName.toLowerCase()  !== value.toLowerCase()\n            )\n        );\n    }\n\n    handleChange(evt) {\n        this.setState({\n          [evt.target.name]: evt.target.value\n        });\n    }\n    handleClickOpen = () => {\n      this.setState({ open: true });\n    };\n  \n    handleClose = () => {\n        this.setState({ open: false });\n    };\n    \n    render() {\n        return (\n      <div>\n        <Button \n            variant=\"outlined\" \n            color=\"primary\" \n            onClick={this.handleClickOpen}\n        >\n          Open form dialog\n        </Button>\n        <Dialog \n            open={this.state.open} \n            onClose={this.handleClose} \n            aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              To subscribe to this website, please enter your email address here. We will send updates\n              occasionally.\n            </DialogContentText>\n            <ValidatorForm \n                onSubmit={() => this.props.handleSubmit(newPaletteName)}\n            >\n                <TextValidator \n                    label=\"Palette Name\"\n                    value={this.state.newPaletteName}\n                    name=\"newPaletteName\"\n                    onChange={this.handleChange}\n                    validators={[\"required\", \"isPaletteNameUnique\"]}\n                    errorMessages={[\"Enter PaletteName\", \"Name Already Taken\"]}\n                />\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                    Save Palette\n                </Button>\n            </ValidatorForm>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Subscribe\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n    \nexport default PaletteMetaForm;"]},"metadata":{},"sourceType":"module"}