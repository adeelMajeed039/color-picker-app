{"ast":null,"code":"var _jsxFileName = \"/home/muhammadatif/Documents/Project/React/Colorsfinal/colrs-final-app/src/Palette.js\";\nimport React, { Component } from 'react';\nimport ColorBox from './ColorBox';\nimport Navbar from './Navbar';\nimport './Palette.css';\n\nclass Palette extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      level: 500,\n      format: \"hex\"\n    };\n    this.changeLevel = this.changeLevel.bind(this);\n    this.changeFormat = this.changeFormat.bind(this);\n  }\n\n  changeLevel(level) {\n    this.setState({\n      level\n    });\n  }\n\n  changeFormat(val) {\n    this.setState({\n      format: val\n    });\n  }\n\n  render() {\n    const colors = this.props.palette.colors;\n    const _this$state = this.state,\n          level = _this$state.level,\n          format = _this$state.format;\n    const colorBoxes = colors[level].map(color => React.createElement(ColorBox, {\n      background: color[format],\n      name: color.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: \"Palette\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      level: level,\n      changeLevel: this.changeLevel,\n      handleChange: this.changeFormat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"Palette-colors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, colorBoxes));\n  }\n\n}\n\nexport default Palette;","map":{"version":3,"sources":["/home/muhammadatif/Documents/Project/React/Colorsfinal/colrs-final-app/src/Palette.js"],"names":["React","Component","ColorBox","Navbar","Palette","constructor","props","state","level","format","changeLevel","bind","changeFormat","setState","val","render","colors","palette","colorBoxes","map","color","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAGA,OAAO,eAAP;;AAEA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAC5BI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE,GAAT;AAAcC,MAAAA,MAAM,EAAE;AAAtB,KAAb;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AACDD,EAAAA,WAAW,CAACF,KAAD,EAAQ;AACf,SAAKK,QAAL,CAAc;AAAEL,MAAAA;AAAF,KAAd;AACH;;AACDI,EAAAA,YAAY,CAACE,GAAD,EAAK;AACb,SAAKD,QAAL,CAAc;AAAEJ,MAAAA,MAAM,EAAEK;AAAV,KAAd;AACH;;AACDC,EAAAA,MAAM,GAAI;AAAA,UACEC,MADF,GACa,KAAKV,KAAL,CAAWW,OADxB,CACED,MADF;AAAA,wBAEoB,KAAKT,KAFzB;AAAA,UAEEC,KAFF,eAEEA,KAFF;AAAA,UAESC,MAFT,eAESA,MAFT;AAGN,UAAMS,UAAU,GAAGF,MAAM,CAACR,KAAD,CAAN,CAAcW,GAAd,CAAkBC,KAAK,IACtC,oBAAC,QAAD;AAAU,MAAA,UAAU,EAAEA,KAAK,CAACX,MAAD,CAA3B;AAAqC,MAAA,IAAI,EAAEW,KAAK,CAACC,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADe,CAAnB;AAGA,WACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AACI,MAAA,KAAK,EAAEb,KADX;AAEI,MAAA,WAAW,EAAE,KAAKE,WAFtB;AAGI,MAAA,YAAY,EAAE,KAAKE,YAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCM,UAAjC,CANJ,CADJ;AAUH;;AA7B2B;;AAgChC,eAAed,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport ColorBox from './ColorBox';\nimport Navbar from './Navbar';\n\n\nimport './Palette.css';\n\nclass Palette extends Component {\n    constructor(props){\n        super(props);\n        this.state = { level: 500, format: \"hex\" };  \n        this.changeLevel = this.changeLevel.bind(this);\n        this.changeFormat = this.changeFormat.bind(this);\n    }\n    changeLevel(level) {\n        this.setState({ level });\n    }\n    changeFormat(val){\n        this.setState({ format: val });\n    }\n    render () {\n        const { colors } = this.props.palette;\n        const { level, format } = this.state;\n        const colorBoxes = colors[level].map(color => (\n            <ColorBox background={color[format]} name={color.name}/>\n        ));\n        return (\n            <div className=\"Palette\">\n                <Navbar \n                    level={level} \n                    changeLevel={this.changeLevel} \n                    handleChange={this.changeFormat}\n                />\n                <div className=\"Palette-colors\">{colorBoxes}</div>\n            </div>\n        );\n    }\n}\n\nexport default Palette;\n"]},"metadata":{},"sourceType":"module"}