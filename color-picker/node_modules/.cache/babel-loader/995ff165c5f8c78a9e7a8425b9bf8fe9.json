{"ast":null,"code":"import _defineProperty from \"/home/muhammadatif/Documents/Project/React/Colorsfinal/colrs-final-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/muhammadatif/Documents/Project/React/Colorsfinal/colrs-final-app/src/NewPaletteForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport Button from '@material-ui/core/Button';\nimport { ChromePicker } from 'react-color';\nconst drawerWidth = 300;\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: \"calc(100% - \".concat(drawerWidth, \"px)\"),\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 20,\n    marginLeft: 12\n  },\n  hide: {\n    display: \"none\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: _objectSpread({\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: \"0 8px\"\n  }, theme.mixins.toolbar, {\n    justifyContent: \"flex-end\"\n  }),\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n});\n\nclass NewPaletteForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDrawerOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleDrawerClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.state = {\n      open: true,\n      currentColor: \"red\"\n    };\n    this.updateCurrentColor = this.updateCurrentColor.bind(this);\n  }\n\n  updateCurrentColor(newColor) {\n    console.log(newColor);\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          theme = _this$props.theme;\n    const open = this.state.open;\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(AppBar, {\n      position: \"fixed\",\n      className: classNames(classes.appBar, {\n        [classes.appBarShift]: open\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      disableGutters: !open,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      color: \"inherit\",\n      \"aria-label\": \"open drawer\",\n      onClick: this.handleDrawerOpen,\n      edge: \"start\",\n      className: classNames(classes.menuButton, open && classes.hide),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(MenuIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      variant: \"h6\",\n      noWrap: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Persistent drawer\"))), React.createElement(Drawer, {\n      className: classes.drawer,\n      variant: \"persistent\",\n      anchor: \"left\",\n      open: open,\n      classes: {\n        paper: classes.drawerPaper\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.drawerHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      onClick: this.handleDrawerClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(ChevronLeftIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }))), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"h4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Design Your Palette\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Clear Palette\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"RandomColor\")), React.createElement(ChromePicker, {\n      color: this.state.currentColor,\n      onChangeComplete: newColor => console.log(newColor),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      style: {\n        backgroundColor: this.state.currentColor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Add Color\")), React.createElement(\"main\", {\n      className: classNames(classes.content, {\n        [classes.contentShift]: open\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.drawerHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withStyles(styles, {\n  withTheme: true\n})(NewPaletteForm);","map":{"version":3,"sources":["/home/muhammadatif/Documents/Project/React/Colorsfinal/colrs-final-app/src/NewPaletteForm.js"],"names":["React","Component","classNames","withStyles","Drawer","CssBaseline","AppBar","Toolbar","Typography","Divider","IconButton","MenuIcon","ChevronLeftIcon","Button","ChromePicker","drawerWidth","styles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","spacing","contentShift","NewPaletteForm","constructor","props","handleDrawerOpen","setState","open","handleDrawerClose","state","currentColor","updateCurrentColor","bind","newColor","console","log","render","classes","paper","backgroundColor","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport Button from '@material-ui/core/Button';\nimport { ChromePicker } from 'react-color';\n\nconst drawerWidth = 300;\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 20,\n    marginLeft: 12\n  },\n  hide: {\n    display: \"none\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\"\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0,\n  },\n});\n\nclass NewPaletteForm extends Component{\n   constructor(props){\n     super(props);\n     this.state = {\n       open: true,\n       currentColor: \"red\"\n      };\n      this.updateCurrentColor = this.updateCurrentColor.bind(this);\n   }\n\n   handleDrawerOpen = () => {\n       this.setState({ open: true });\n   };\n   handleDrawerClose = () => {\n       this.setState({ open: false });\n    };\n    updateCurrentColor(newColor){\n      console.log(newColor);\n    };\n   render(){ \n       const { classes, theme } = this.props;\n       const { open } = this.state;\n\n       return (\n            <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={classNames(classes.appBar, {\n                [classes.appBarShift]: open,\n                })}\n            >\n                <Toolbar disableGutters={!open}>\n                <IconButton\n                    color=\"inherit\"\n                    aria-label=\"open drawer\"\n                    onClick={this.handleDrawerOpen}\n                    edge=\"start\"\n                    className={classNames(classes.menuButton, open && classes.hide)}\n                >\n                    <MenuIcon />\n                </IconButton>\n                <Typography variant=\"h6\" noWrap>\n                    Persistent drawer\n                </Typography>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={open}\n                classes={{\n                paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                  <IconButton onClick={this.handleDrawerClose}>\n                      <ChevronLeftIcon />\n                  </IconButton>\n                </div>\n                <Divider />\n                <Typography variant=\"h4\">\n                  Design Your Palette\n                </Typography>\n                <div>\n                  <Button variant=\"contained\" color=\"secondary\">\n                    Clear Palette\n                  </Button>\n                  <Button variant=\"contained\" color=\"primary\">\n                    RandomColor\n                  </Button>\n                </div>\n                <ChromePicker \n                  color={this.state.currentColor}\n                  onChangeComplete={(newColor) => console.log(newColor)}\n                />\n                <Button variant=\"contained\" color=\"primary\" style={{ backgroundColor: this.state.currentColor }}>\n                  Add Color\n                </Button>\n            </Drawer>\n            <main\n                className={classNames(classes.content, {\n                [classes.contentShift]: open,\n                })}\n            >\n            <div className={classes.drawerHeader} />\n            \n            </main>\n          </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(NewPaletteForm);"]},"metadata":{},"sourceType":"module"}