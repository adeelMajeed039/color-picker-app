{"ast":null,"code":"var _jsxFileName = \"/home/muhammadatif/Documents/Project/React/Colorsfinal/colrs-final-app/src/SingleColorPalette.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport PaletteFooter from './PaletteFooter';\nimport ColorBox from './ColorBox';\nimport { withStyles } from '@material-ui/styles';\nconst styles = {\n  Palette: {\n    height: \"95vh\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  colors: {\n    height: \"90%\"\n  },\n  goBack: {\n    width: \"20%\",\n    height: \"50%\",\n    margin: \"0 auto\",\n    display: \"inline-block\",\n    position: \"relative\",\n    cursor: \"pointer\",\n    marginBottom: \"-3.5px\",\n    opacity: \"1\",\n    backgroundColor: \"black\",\n    \"& a\": {\n      color: \"white\",\n      width: \"100px\",\n      height: \"30px\",\n      position: \"absolute\",\n      display: \"inline-block\",\n      top: \"50%\",\n      textAlign: \"center\",\n      left: \"50%\",\n      marginTop: \"-15px\",\n      marginLeft: \"-50px\",\n      outline: \"none\",\n      background: \"rgba(255, 255, 255, 0.3)\",\n      fontSize: \"1rem\",\n      lineHeight: \"30px\",\n      textTransform: \"uppercase\",\n      border: \"none\",\n      textDecoration: \"none\"\n    }\n  }\n};\n\nclass SingleColorPalette extends Component {\n  constructor(props) {\n    super(props);\n    this._shades = this.gatherShades(this.props.palette, this.props.colorId);\n    this.state = {\n      format: \"hex\"\n    };\n    this.changeFormat = this.changeFormat.bind(this);\n  }\n\n  gatherShades(palette, colorToFilterBy) {\n    let shades = [];\n    let allColors = palette.colors;\n\n    for (let key in allColors) {\n      shades = shades.concat(allColors[key].filter(color => color.id === colorToFilterBy));\n    }\n\n    return shades.slice(1);\n  }\n\n  changeFormat(val) {\n    this.setState({\n      format: val\n    });\n  }\n\n  render() {\n    const format = this.state.format;\n    const classes = this.props.classes;\n    const _this$props$palette = this.props.palette,\n          paletteName = _this$props$palette.paletteName,\n          emoji = _this$props$palette.emoji,\n          id = _this$props$palette.id;\n\n    const colorBoxes = this._shades.map(color => React.createElement(ColorBox, {\n      key: color.name,\n      name: color.name,\n      background: color[format],\n      showingFullPalette: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }));\n\n    return React.createElement(\"div\", {\n      className: classes.Palette,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      handleChange: this.changeFormat,\n      showingAllColors: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.colors,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, colorBoxes, React.createElement(\"div\", {\n      className: classes.goBack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/palette/\".concat(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Go Back\"))), React.createElement(PaletteFooter, {\n      paletteName: paletteName,\n      emoji: emoji,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withStyles(styles)(SingleColorPalette);","map":{"version":3,"sources":["/home/muhammadatif/Documents/Project/React/Colorsfinal/colrs-final-app/src/SingleColorPalette.js"],"names":["React","Component","Link","Navbar","PaletteFooter","ColorBox","withStyles","styles","Palette","height","display","flexDirection","colors","goBack","width","margin","position","cursor","marginBottom","opacity","backgroundColor","color","top","textAlign","left","marginTop","marginLeft","outline","background","fontSize","lineHeight","textTransform","border","textDecoration","SingleColorPalette","constructor","props","_shades","gatherShades","palette","colorId","state","format","changeFormat","bind","colorToFilterBy","shades","allColors","key","concat","filter","id","slice","val","setState","render","classes","paletteName","emoji","colorBoxes","map","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,SAASC,UAAT,QAA2B,qBAA3B;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,OAAO,EAAE;AACLC,IAAAA,MAAM,EAAE,MADH;AAELC,IAAAA,OAAO,EAAE,MAFJ;AAGLC,IAAAA,aAAa,EAAE;AAHV,GADE;AAMXC,EAAAA,MAAM,EAAE;AACJH,IAAAA,MAAM,EAAE;AADJ,GANG;AAUXI,EAAAA,MAAM,EAAE;AACJC,IAAAA,KAAK,EAAE,KADH;AAEJL,IAAAA,MAAM,EAAE,KAFJ;AAGJM,IAAAA,MAAM,EAAE,QAHJ;AAIJL,IAAAA,OAAO,EAAC,cAJJ;AAKJM,IAAAA,QAAQ,EAAE,UALN;AAMJC,IAAAA,MAAM,EAAE,SANJ;AAOJC,IAAAA,YAAY,EAAE,QAPV;AAQJC,IAAAA,OAAO,EAAE,GARL;AASJC,IAAAA,eAAe,EAAE,OATb;AAUJ,WAAO;AACHC,MAAAA,KAAK,EAAE,OADJ;AAEHP,MAAAA,KAAK,EAAE,OAFJ;AAGHL,MAAAA,MAAM,EAAE,MAHL;AAIHO,MAAAA,QAAQ,EAAE,UAJP;AAKHN,MAAAA,OAAO,EAAE,cALN;AAMHY,MAAAA,GAAG,EAAE,KANF;AAOHC,MAAAA,SAAS,EAAE,QAPR;AAQHC,MAAAA,IAAI,EAAE,KARH;AASHC,MAAAA,SAAS,EAAE,OATR;AAUHC,MAAAA,UAAU,EAAE,OAVT;AAWHC,MAAAA,OAAO,EAAE,MAXN;AAYHC,MAAAA,UAAU,EAAE,0BAZT;AAaHC,MAAAA,QAAQ,EAAE,MAbP;AAcHC,MAAAA,UAAU,EAAE,MAdT;AAeHC,MAAAA,aAAa,EAAE,WAfZ;AAgBHC,MAAAA,MAAM,EAAE,MAhBL;AAiBHC,MAAAA,cAAc,EAAE;AAjBb;AAVH;AAVG,CAAf;;AA0CA,MAAMC,kBAAN,SAAiCjC,SAAjC,CAA2C;AACvCkC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,OAAL,GAAe,KAAKC,YAAL,CAAkB,KAAKF,KAAL,CAAWG,OAA7B,EAAsC,KAAKH,KAAL,CAAWI,OAAjD,CAAf;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAb;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDN,EAAAA,YAAY,CAACC,OAAD,EAAUM,eAAV,EAA0B;AAClC,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIC,SAAS,GAAGR,OAAO,CAAC3B,MAAxB;;AAEA,SAAK,IAAIoC,GAAT,IAAgBD,SAAhB,EAA2B;AACvBD,MAAAA,MAAM,GAAGA,MAAM,CAACG,MAAP,CACLF,SAAS,CAACC,GAAD,CAAT,CAAeE,MAAf,CAAsB7B,KAAK,IAAIA,KAAK,CAAC8B,EAAN,KAAaN,eAA5C,CADK,CAAT;AAGH;;AACD,WAAOC,MAAM,CAACM,KAAP,CAAa,CAAb,CAAP;AACH;;AACDT,EAAAA,YAAY,CAACU,GAAD,EAAK;AACb,SAAKC,QAAL,CAAc;AAAEZ,MAAAA,MAAM,EAAEW;AAAV,KAAd;AACH;;AACDE,EAAAA,MAAM,GAAG;AAAA,UACGb,MADH,GACc,KAAKD,KADnB,CACGC,MADH;AAAA,UAEGc,OAFH,GAEc,KAAKpB,KAFnB,CAEGoB,OAFH;AAAA,gCAG8B,KAAKpB,KAAL,CAAWG,OAHzC;AAAA,UAGGkB,WAHH,uBAGGA,WAHH;AAAA,UAGgBC,KAHhB,uBAGgBA,KAHhB;AAAA,UAGuBP,EAHvB,uBAGuBA,EAHvB;;AAIL,UAAMQ,UAAU,GAAG,KAAKtB,OAAL,CAAauB,GAAb,CAAiBvC,KAAK,IACrC,oBAAC,QAAD;AACI,MAAA,GAAG,EAAEA,KAAK,CAACwC,IADf;AAEI,MAAA,IAAI,EAAExC,KAAK,CAACwC,IAFhB;AAGI,MAAA,UAAU,EAAExC,KAAK,CAACqB,MAAD,CAHrB;AAII,MAAA,kBAAkB,EAAE,KAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADe,CAAnB;;AAQA,WACI;AAAK,MAAA,SAAS,EAAEc,OAAO,CAAChD,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,YAAY,EAAE,KAAKmC,YAA3B;AAAyC,MAAA,gBAAgB,EAAE,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,SAAS,EAAEa,OAAO,CAAC5C,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK+C,UADL,EAEI;AAAK,MAAA,SAAS,EAAEH,OAAO,CAAC3C,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,EAAE,qBAAcsC,EAAd,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CAFJ,CAFJ,EAQI,oBAAC,aAAD;AAAe,MAAA,WAAW,EAAEM,WAA5B;AAAyC,MAAA,KAAK,EAAEC,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CADJ;AAYH;;AA9CsC;;AAiD3C,eAAepD,UAAU,CAACC,MAAD,CAAV,CAAmB2B,kBAAnB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport PaletteFooter from './PaletteFooter';\nimport ColorBox from './ColorBox' ;\n\nimport { withStyles } from '@material-ui/styles';\n\nconst styles = {\n    Palette: {\n        height: \"95vh\",\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    colors: {\n        height: \"90%\"\n\n    },\n    goBack: {\n        width: \"20%\",\n        height: \"50%\",\n        margin: \"0 auto\",\n        display:\"inline-block\",\n        position: \"relative\",\n        cursor: \"pointer\",\n        marginBottom: \"-3.5px\",\n        opacity: \"1\",\n        backgroundColor: \"black\",\n        \"& a\": {\n            color: \"white\",\n            width: \"100px\",\n            height: \"30px\",\n            position: \"absolute\",\n            display: \"inline-block\",\n            top: \"50%\",\n            textAlign: \"center\",\n            left: \"50%\",\n            marginTop: \"-15px\",\n            marginLeft: \"-50px\",\n            outline: \"none\",\n            background: \"rgba(255, 255, 255, 0.3)\",\n            fontSize: \"1rem\",\n            lineHeight: \"30px\",\n            textTransform: \"uppercase\",\n            border: \"none\",\n            textDecoration: \"none\",\n        }\n    }\n};\n\nclass SingleColorPalette extends Component {\n    constructor(props){\n        super(props);\n        this._shades = this.gatherShades(this.props.palette, this.props.colorId);\n        this.state = { format: \"hex\" };\n        this.changeFormat = this.changeFormat.bind(this);\n    }\n\n    gatherShades(palette, colorToFilterBy){\n        let shades = [];\n        let allColors = palette.colors;  \n \n        for (let key in allColors) {\n            shades = shades.concat(\n                allColors[key].filter(color => color.id === colorToFilterBy)\n            );\n        }\n        return shades.slice(1);\n    }\n    changeFormat(val){\n        this.setState({ format: val });\n    }\n    render() {\n        const { format } = this.state;\n        const { classes } =this.props;\n        const { paletteName, emoji, id } = this.props.palette;\n        const colorBoxes = this._shades.map(color => (\n            <ColorBox \n                key={color.name} \n                name={color.name} \n                background={color[format]} \n                showingFullPalette={false}\n            />\n        ))\n        return (\n            <div className={classes.Palette}>\n                <Navbar handleChange={this.changeFormat} showingAllColors={false}/>\n                <div className={classes.colors}>\n                    {colorBoxes}\n                    <div className={classes.goBack} >\n                        <Link to={`/palette/${id}`}>Go Back</Link>\n                    </div>\n                </div>\n                <PaletteFooter paletteName={paletteName} emoji={emoji}/>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SingleColorPalette);"]},"metadata":{},"sourceType":"module"}